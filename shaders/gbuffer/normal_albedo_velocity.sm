#type shading_model

block properties {
    mat4x4 vp_matrix;
    mat4x4 prev_vp_matrix;
}
section geom_post {
    out vec4 gl_Position(in vec3 f_world_position) {
    GLSL
        return vp_matrix * vec4(f_world_position, 1);
    END
    }
}
section frag_post {
    out vec4 gbuffer_normal(in vec3 f_world_normal) {
    GLSL
        return vec4(f_world_normal, 1);
    END
    }
    out vec4 gbuffer_albedo(in vec4 f_albedo) {
    GLSL
        return f_albedo;
    END
    }
    out vec4 gbuffer_velocity(in vec3 f_world_position, in vec3 f_prev_world_position) {
    GLSL
        vec4 p_h = vp_matrix * vec4(f_world_position, 1);
        vec4 pp_h = prev_vp_matrix * vec4(f_prev_world_position, 1);
        vec2 p = p_h.xy / p_h.w;
        vec2 pp = pp_h.xy / pp_h.w;
        return vec4(p - pp, 0,1);
    END
    }
}
