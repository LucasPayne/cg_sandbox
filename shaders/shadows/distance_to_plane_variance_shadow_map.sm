#type shading_model

block properties {
    mat4x4 vp_matrix;
}
section geom_post {
    out vec4 gl_Position(in vec3 f_world_position) {
    GLSL
        return vp_matrix * vec4(f_world_position, 1);
    END
    }
}
section frag_post {
    out vec4 moments(in vec3 f_world_position) {
    GLSL
        float d = 0.5 * (vp_matrix * vec4(f_world_position, 1)).z + 0.5;
        float dx = dFdx(d);
        float dy = dFdy(d);
        vec2 ms = vec2(d, d*d + 0.25*(dx*dx + dy*dy));

        // Distribute precision.
        const float distribute_factor = 256;
        float factor_inv = 1 / distribute_factor;
        vec2 int_part;
        vec2 frac_part = modf(ms * distribute_factor, int_part);

        return vec4(int_part * factor_inv, frac_part);
    END
    }
}
